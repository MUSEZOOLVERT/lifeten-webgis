/* Copyright (c) 2007-2010 Help Service - Remote Sensing s.r.o. * Author(s): Martin Vlk * * This file is part of HSLayers. * * HSLayers is free software: you can redistribute it and/or modify * it under the terms of the GNU General Public License as published by * the Free Software Foundation, either version 3 of the License, or * any later version. * * HSLayers is distributed in the hope that it will be useful, * but WITHOUT ANY WARRANTY; without even the implied warranty of * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the * GNU General Public License for more details. * *  See http://www.gnu.org/licenses/gpl.html for the full text of the *  license. */Ext.namespace("HSLayers.SLD");/** * Window for edit complex layer symbology * * @class HSLayers.SLD.LayerSymbologyWindow */HSLayers.SLD.LayerSymbologyWindow = Ext.extend(Ext.Window, {    // **********************************************************************    // private members    // **********************************************************************    /**     * @private     * @name HSLayers.SLD.LayerSymbologyWindow.attributes     * @type Ext.data.Store     */    attributes: null,    /**     * @private     * @name HSLayers.SLD.LayerSymbologyWindow.getValuesHandler     * @type Object     */    getValuesHandler: null,    /**     * @private     * @name HSLayers.SLD.LayerSymbologyWindow.sld     * @type OpenLayers.Style     */    sld: null,    /**     * @private     * @name HSLayers.SLD.LayerSymbologyWindow._symbolType     * @type String     */    symbolType: null,    /**     * @private     * @function     * @name HSLayers.SLD.LayerSymbologyWindow._initAttributes     */    _initAttributes: function() {        this.attributes = HSLayers.SLD.Util.initAttributeStore(this.attributes);    },    // **********************************************************************    // public members    // **********************************************************************    /**     * @function     * @name HSLayers.SLD.LayerSymbologyWindow.initComponent     */    initComponent: function() {        var defConfig = {            plain: true,            border: false        };        Ext.applyIf(this, defConfig);        this._initAttributes();        var wnd = this;        this.modal = true;        this.title = "Layer Symbology Panel";        this.width = 420;        this.height = 400;        this.layout = "fit";        this.items = [{            xtype: "hslayers_sld_layersymbologypanel",            autoScroll: true,            attributes: this.attributes,            getValuesHandler: this.getValuesHandler,            sld: this.sld,            symbolType: this.symbolType        }];        this.bbar = [{            text: "View SLD",            handler: function() {                var sld = wnd.get(0).getSelectedStyle();                HSLayers.SLD.Util.showSLD(sld);            }        },        "->", {            text: "Ok",            handler: function() {                wnd.sld = wnd.get(0).getSelectedStyle();                wnd.fireEvent("onAccept", wnd);                wnd.close();            }        }, {            text: "Cancel",            handler: function() {                wnd.fireEvent("onCancel", wnd);                wnd.close();            }        }];        this.addEvents(            "onAccept", "onCancel"        );        HSLayers.SLD.LayerSymbologyWindow.superclass.initComponent.call(this);    },    /**     * @function     * @name HSLayers.SLD.LayerSymbologyWindow.getSelectedStyle     * @return {OpenLayers.Style}     */    getSelectedStyle: function() {        return this.get(0).getSelectedStyle();    },    /**     * @function     * @name HSLayers.SLD.LayerSymbologyWindow.onShow     */    onShow: function() {        HSLayers.SLD.LayerSymbologyWindow.superclass.onShow.call(this);        this.get(0).afterShow();    }});Ext.reg('hslayers_sld_layersymbologywindow', HSLayers.SLD.LayerSymbologyWindow);