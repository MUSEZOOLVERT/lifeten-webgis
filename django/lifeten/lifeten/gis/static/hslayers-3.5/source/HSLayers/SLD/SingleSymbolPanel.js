/* Copyright (c) 2007-2010 Help Service - Remote Sensing s.r.o. * Author(s): Martin Vlk * * This file is part of HSLayers. * * HSLayers is free software: you can redistribute it and/or modify * it under the terms of the GNU General Public License as published by * the Free Software Foundation, either version 3 of the License, or * any later version. * * HSLayers is distributed in the hope that it will be useful, * but WITHOUT ANY WARRANTY; without even the implied warranty of * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the * GNU General Public License for more details. * *  See http://www.gnu.org/licenses/gpl.html for the full text of the *  license. */Ext.namespace("HSLayers.SLD");/** * Panel for edit one symbol * * @class HSLayers.SLD.SingleSymbolPanel */HSLayers.SLD.SingleSymbolPanel = Ext.extend(Ext.FormPanel, {    // **********************************************************************    // private members    // **********************************************************************    /**     * @private     * @name HSLayers.SLD.SingleSymbolPanel.attributes     * @type {Ext.data.Store}     */    attributes: null,    /**     * @private     * @name HSLayers.SLD.SingleSymbolPanel.rule     * @type {OpenLayers.Rule}     */    rule: null,    /**     * @private     * @name HSLayers.SLD.SingleSymbolPanel.symbolType     * @type {String}     */    symbolType: null,    // **********************************************************************    // public members    // **********************************************************************    /**     * @function     * @name HSLayers.SLD.SingleSymbolPanel.editSymbology     */    editSymbology: function() {        var win = new HSLayers.SLD.SymbologyWindow({            attributes: this.attributes,            rule: this.rule,            symbolType: this.symbolType,            listeners: {                onAccept: function(w) {                    this.get(1).setSymbolizers(                        HSLayers.SLD.Util.getSymbolizersForPreviewFromRule(this.rule, this.symbolType),                        {draw: true}                    );                },                scope: this            }        });        win.show();    },    /**     * @function     * @name HSLayers.SLD.SingleSymbolPanel.initComponent     */    initComponent: function() {        this.bodyStyle = {"padding": "10px"};        this.items = [{            xtype: "textfield",            fieldLabel: "Name",            value: this.rule.name,            listeners: {                change: function(el, value) {                    this.rule.name = value;                    this.fireEvent("change", this.rule);                },                scope: this            }        }, {            xtype: "hslayers_boxfeaturerenderer",            symbolType: this.symbolType,            symbolizers: HSLayers.SLD.Util.getSymbolizersForPreviewFromRule(this.rule, this.symbolType),            isFormField: true,            fieldLabel: "Symbol",            height: 20,            width: 30,            style: {                cursor: "pointer"            },            listeners: {                click: function() {                    this.editSymbology();                },                scope: this            }        }];        HSLayers.SLD.SingleSymbolPanel.superclass.initComponent.call(this);    },    /**     * @function     * @name HSLayers.SLD.SingleSymbolPanel.redrawSymbol     */    redrawSymbol: function() {        this.items.get(1).drawFeature();    }});Ext.reg('hslayers_sld_singlesymbolpanel', HSLayers.SLD.SingleSymbolPanel);